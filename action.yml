name: Common build and push
description: A GitHub Action that build and push image
inputs:
  REGISTRY:
    description: Private registry
    required: false
    default: 'ghcr.io'
  DOT_ENV:
    description: Dot env content
    required: false
    default: ''
  DOT_ENV_FILENAME:
    description: Dot env filename
    required: false
    default: '.env'
  GH_TOKEN:
    description: GitHub Token
    required: true
  WITH_NPM_BUILD:
    description: Force node version
    required: false
    default: 'false'
  NODE_VERSION:
    description: Force node version
    required: false
  AUTH_JSON:
    description: auth.json for composer authentication
    required: false
    default: '{}'
  BUILD_ARGS:
    description: Other custom build args
    required: false
  CERT_ZIP_PASSWORD:
    description: Cert Zip Password
    required: false
  WITH_AUTO_CONFIGURE:
    description: Accept auto configuration
    required: false
  AUTO_CONFIGURE_JSON_PATH:
    description: specific auto configure json path
    required: false
    default: '../plop.json'
  REMOTE_DOCKER_HOST:
    description: Remote Docker ssh IP
    required: true
  REMOTE_DOCKER_USER:
    description: Remote Docker ssh user
    required: false
    default: 'debian'
  REMOTE_DOCKER_PORT:
    description: Remote Docker ssh port ie (22)
    required: false
    default: '22'
  SSH_PRIVATE_KEY:
    description: SSH private key used to connect to the docker host
    required: true
  STACK_FILE:
    description: Docker stack file used. Default is docker-compose.yml
    required: false
    default: '.docker/docker-compose.yml'
  LARAVEL_OAUTH_PRIVATE_KEY:
    description: Laravel Passport private key
    required: false
  LARAVEL_OAUTH_PUBLIC_KEY:
    description: Laravel Passport public key
    required: false
  CUSTOM_API_URL:
    description: Custom URL for front to call API
    required: false
  ENV_NAME:
    description: Environment name
    required: false
    default: 'production'

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Checkout deployment configuration generator
      if: inputs.WITH_AUTO_CONFIGURE == 'true'
      uses: actions/checkout@v3
      with:
        repository: phoenix-fr/deployment-configuration-generator
        path: deploy-script
        token: ${{ inputs.GH_TOKEN }}
    - name: Setup Node.js
      if: inputs.WITH_AUTO_CONFIGURE == 'true'
      uses: actions/setup-node@v3
    - name: Install Plop
      if: inputs.WITH_AUTO_CONFIGURE == 'true'
      run: npm i -g plop
      shell: bash
    - name: Configure project
      if: inputs.WITH_AUTO_CONFIGURE == 'true'
      run: cd deploy-script && plop "${{ inputs.AUTO_CONFIGURE_JSON_PATH }}" "${{ github.ref_name }}" "${{ github.event.repository.name }}" "${{ inputs.ENV_NAME }}" && cd .. && rm -rf deploy-script
      shell: bash

    - name: Setup Node.js
      if: inputs.WITH_NPM_BUILD == 'true'
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.NODE_VERSION }}

    - name: Extract certs
      if: inputs.CERT_ZIP_PASSWORD
      shell: bash
      run: unzip -P ${{ inputs.CERT_ZIP_PASSWORD }} .docker-prod/certs/certs.zip -d .docker-prod/certs/

    - name: Copy .env
      shell: bash
      run: |
        echo "${{ inputs.DOT_ENV }}" > ${{ inputs.DOT_ENV_FILENAME }}
        export CUSTOM_API_URL="${{ inputs.CUSTOM_API_URL }}"
        sed -i 's/\$\{CUSTOM_API_URL\}/${{ inputs.CUSTOM_API_URL }}/g' ${{ inputs.DOT_ENV_FILENAME }}
        cat ${{ inputs.DOT_ENV_FILENAME }}
    - name: Copy laravel oauth key
      if: inputs.LARAVEL_OAUTH_PRIVATE_KEY && inputs.LARAVEL_OAUTH_PUBLIC_KEY
      shell: bash
      run: mkdir -p storage && echo "${{ inputs.LARAVEL_OAUTH_PRIVATE_KEY }}" > storage/oauth-private.key && echo "${{ inputs.LARAVEL_OAUTH_PUBLIC_KEY }}" > storage/oauth-public.key

    - name: Copy auth.json
      shell: bash
      run: echo "${{ inputs.AUTH_JSON }}" > auth.json

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ inputs.GH_TOKEN }}

    - name: Login to NPM registry
      if: inputs.WITH_NPM_BUILD == 'true'
      run: echo "@phoenix-fr:registry=https://npm.pkg.github.com" > ~/.npmrc
        && echo "//npm.pkg.github.com/:_authToken=${{ inputs.GH_TOKEN }}" >> ~/.npmrc
      shell: bash
    - name: NPM Install
      if: inputs.WITH_NPM_BUILD == 'true'
      run: npm ci
      shell: bash
    - name: NPM Build
      if: inputs.WITH_NPM_BUILD == 'true'
      run: npm run build
      shell: bash

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.REGISTRY }}/${{ github.repository }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: .docker/Dockerfile
        push: true
        build-args: |
          GITHUB_TOKEN=${{ inputs.GH_TOKEN }}
          ${{ inputs.BUILD_ARGS }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Deploy to Docker swarm
      uses: phoenix-fr/docker-deployment-action@v2.0.16
      with:
        remote_docker_host: ${{ inputs.REMOTE_DOCKER_USER }}@${{ inputs.REMOTE_DOCKER_HOST }}
        remote_docker_port: ${{ inputs.REMOTE_DOCKER_PORT }}
        ssh_private_key: ${{ inputs.SSH_PRIVATE_KEY }}
        stack_file_name: ${{ inputs.STACK_FILE }}
        gh_token: ${{ inputs.GH_TOKEN }}
        args: ${{ github.event.repository.name }}${{ inputs.ENV_NAME == 'production' && '' || '-' }}${{ inputs.ENV_NAME == 'production' && '' || inputs.ENV_NAME }}-${{ github.ref_name }}