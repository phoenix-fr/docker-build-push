name: Common build and push
description: A GitHub Action that build and push image
inputs:
  REGISTRY:
    description: Private registry
    required: false
    default: 'ghcr.io'
  DOT_ENV:
    description: Dot env content
    required: false
    default: ''
  DOT_ENV_FILENAME:
    description: Dot env filename
    required: false
    default: '.env'
  GH_TOKEN:
    description: GitHub Token
    required: true
  WITH_NPM_BUILD:
    description: Force node version
    required: false
    default: 'false'
  NODE_VERSION:
    description: Force node version
    required: false
  AUTH_JSON:
    description: auth.json for composer authentication
    required: false
    default: '{}'
  BUILD_ARGS:
    description: Other custom build args
    required: false
  CERT_ZIP_PASSWORD:
    description: Cert Zip Password
    required: false
    default: 'false'

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      if: inputs.WITH_NPM_BUILD == 'true'
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.NODE_VERSION }}

    - name: Extract certs
      if: inputs.CERT_ZIP_PASSWORD != 'false'
      shell: bash
      run: unzip .docker-prod/certs/certs.zip -P ${{ inputs.CERT_ZIP_PASSWORD }} .docker-prod/certs/

    - name: Copy .env
      shell: bash
      run: echo "${{ inputs.DOT_ENV }}" > ${{ inputs.DOT_ENV_FILENAME }}

    - name: Copy auth.json
      shell: bash
      run: echo "${{ inputs.AUTH_JSON }}" > auth.json

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ inputs.GH_TOKEN }}

    - name: Login to NPM registry
      if: inputs.WITH_NPM_BUILD == 'true'
      run: echo "@phoenix-fr:registry=https://npm.pkg.github.com" > ~/.npmrc
        && echo "//npm.pkg.github.com/:_authToken=${{ inputs.GH_TOKEN }}" >> ~/.npmrc
      shell: bash
    - name: NPM Install
      if: inputs.WITH_NPM_BUILD == 'true'
      run: npm ci
      shell: bash
    - name: NPM Build
      if: inputs.WITH_NPM_BUILD == 'true'
      run: npm run build
      shell: bash

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.REGISTRY }}/${{ github.repository }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: .docker-prod/Dockerfile
        push: true
        build-args: |
          GITHUB_TOKEN=${{ inputs.GH_TOKEN }}
          ${{ inputs.BUILD_ARGS }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
